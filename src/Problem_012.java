// Problem:
/*
 * The sequence of triangle numbers is generated by adding the natural numbers.
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 * 
 * 				1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * 
 * Let us list the factors of the first seven triangle numbers:
 *  1: 1
 *  3: 1,3
 *  6: 1,2,3,6
 * 10: 1,2,5,10
 * 15: 1,3,5,15
 * 21: 1,3,7,21
 * 28: 1,2,4,7,14,28
 * 
 * We can see that 28 is the first triangle number to have over five divisors.
 * 
 * What is the value of the first triangle number to have over five hundred divisors?
 */

// Answer: 

public class Problem_012 {
	
	public static String work(){
		final int MAX_TRI = 20000;
		final int DESIRED_DIVISORS = 500;
		String results = "hello";
		int i;
		long triangle = 0;
		
		for (i = 1; i < MAX_TRI; i++) {
			triangle += i;
			if (numDivisors(triangle) > DESIRED_DIVISORS) {
				results = "First Triangle number = " + triangle;
				return results;
			}
			if (i % 1000 == 0) {
				System.out.println("i = " + i + "\ttriangle = " + triangle + "\tnumDivisors(triangle) = " + numDivisors(triangle));
			}
		}
		
		return results;
	}
	
	private static int numDivisors(long val) {
		int divisors = 0;		
		int i;
		double sqr = Math.sqrt(val);
		long floor = (long) (sqr + .5);
				
		for (i = 1; i < floor; i++) {
			if (val % i == 0) {
				divisors += 2;
			}
		}
		
		if (i % floor == 0)
			divisors++;
		
		return divisors;
	}
	
}